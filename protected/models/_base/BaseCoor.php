<?php

/**
 * This is the model base class for the table "coor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Coor".
 *
 * Columns in table "coor" available as properties of the model,
 * followed by relations of table "coor" available as properties of the model.
 *
 * @property integer $id
 * @property string $x
 * @property string $y
 * @property integer $province_id
 *
 * @property Province $province
 */
abstract class BaseCoor extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'coor';
    }

    public static function representingColumn() {
        return 'x';
    }

    public function rules() {
        return array(
            array('x, y, province_id', 'required'),
            array('province_id', 'numerical', 'integerOnly'=>true),
            array('x, y', 'length', 'max'=>100),
            array('id, x, y, province_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'province' => array(self::BELONGS_TO, 'Province', 'province_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'x' => Yii::t('app', 'X'),
                'y' => Yii::t('app', 'Y'),
                'province_id' => Yii::t('app', 'Province'),
                'province' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('x', $this->x, true);
        $criteria->compare('y', $this->y, true);
        $criteria->compare('province_id', $this->province_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}