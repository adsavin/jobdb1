<?php

/**
 * This is the model base class for the table "menu_translate".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MenuTranslate".
 *
 * Columns in table "menu_translate" available as properties of the model,
 * followed by relations of table "menu_translate" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $content
 * @property integer $language_id
 * @property integer $menu_id
 *
 * @property Language $language
 * @property Menu $menu
 */
abstract class BaseMenuTranslate extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'menu_translate';
    }

    public static function representingColumn() {
        return 'name';
    }

    public function rules() {
        return array(
            array('name, language_id, menu_id', 'required'),
            array('language_id, menu_id', 'numerical', 'integerOnly'=>true),
            array('name', 'length', 'max'=>255),
            array('content', 'safe'),
            array('content', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, name, content, language_id, menu_id', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'language' => array(self::BELONGS_TO, 'Language', 'language_id'),
            'menu' => array(self::BELONGS_TO, 'Menu', 'menu_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'name' => Yii::t('app', 'Name'),
                'content' => Yii::t('app', 'Content'),
                'language_id' => Yii::t('app', 'Language'),
                'menu_id' => Yii::t('app', 'Menu'),
                'language' => null,
                'menu' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('name', $this->name, true);
        $criteria->compare('content', $this->content, true);
        $criteria->compare('language_id', $this->language_id);
        $criteria->compare('menu_id', $this->menu_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}