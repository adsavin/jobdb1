<?php

/**
 * This is the model base class for the table "company".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Company".
 *
 * Columns in table "company" available as properties of the model,
 * followed by relations of table "company" available as properties of the model.
 *
 * @property integer $id
 * @property string $no
 * @property string $name
 * @property string $logo
 * @property string $status
 * @property string $address
 * @property string $telelphone
 * @property string $email
 * @property string $registered_date
 * @property string $last_updated
 * @property integer $user_id
 *
 * @property User $user
 * @property JobIndustry[] $jobIndustries
 * @property JobContent[] $jobContents
 */
abstract class BaseCompany extends AweActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'company';
    }

    public static function representingColumn() {
        return 'no';
    }

    public function rules() {
        return array(
            array('no, name, logo, status, telelphone, email, registered_date, last_updated, user_id', 'required'),
            array('user_id', 'numerical', 'integerOnly' => true),
            array('no', 'length', 'max' => 45),
            array('name, logo, telelphone, email', 'length', 'max' => 255),
            array('status', 'length', 'max' => 9),
            array('address', 'safe'),
            array('address', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, no, name, logo, status, address, telelphone, email, registered_date, last_updated, user_id', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'user' => array(self::BELONGS_TO, 'User', 'user_id'),
            'jobIndustries' => array(self::MANY_MANY, 'JobIndustry', 'company_has_job_industry(company_id, job_industry_id)'),
            'jobContents' => array(self::HAS_MANY, 'JobContent', 'company_id'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'no' => Yii::t('app', 'No'),
            'name' => Yii::t('app', 'Name'),
            'logo' => Yii::t('app', 'Logo'),
            'status' => Yii::t('app', 'Status'),
            'address' => Yii::t('app', 'Address'),
            'telelphone' => Yii::t('app', 'Telelphone'),
            'email' => Yii::t('app', 'Email'),
            'registered_date' => Yii::t('app', 'Registered Date'),
            'last_updated' => Yii::t('app', 'Last Updated'),
            'user_id' => Yii::t('app', 'User'),
            'user' => null,
            'jobIndustries' => null,
            'jobContents' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('no', $this->no, true);
        $criteria->compare('name', $this->name, true);
        $criteria->compare('logo', $this->logo, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('address', $this->address, true);
        $criteria->compare('telelphone', $this->telelphone, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('registered_date', $this->registered_date, true);
        $criteria->compare('last_updated', $this->last_updated, true);
        $criteria->compare('user_id', $this->user_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
                ), parent::behaviors());
    }

}
